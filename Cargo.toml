[package]
name = "mvcore"
version = "0.1.0"
edition = "2021"
description = "The MV core library. Rendering, assets and GUI."
authors = [
    "Maxim Savenkov <mqxf@mvteam.dev>",
    "Julian Hohenhausen <v22@mvteam.dev>"
]
readme = "README.md"
keywords = [
    "mvcore",
    "rendering",
    "wgpu",
    "assets",
    "gui"
]
categories = [
    "rendering",
    "rendering::engine",
    "gui",
    "graphics"
]
license-file = "LICENCE"

[[test]]
name = "test"
path = "tests/main.rs"
harness = false

[profile.release]
opt-level = 3
strip = true
lto = false
debug = false
codegen-units = 1
panic = "unwind"

[features]
ui = []
3d = ["dep:gltf"]
vr = ["dep:openxr", "3d"]

[dependencies]

# internal dependencies
mvcore-proc-macro = { path = "Proc" }

# mvteam dependencies
mvutils = "0.5.7"
mvsync = "1.1.4"
mvlogger = "0.2.1"

# general dependencies
bytebuffer = "2.2.0"
itertools = "0.12.0"
log = "0.4.20"
num-traits = "0.2.17"
hashbrown = "0.14.3"

# specific dependencies
include_dir = "0.7.3"
shaderc = "0.8.3"
openal = "0.2.2"
image = "0.24.8"

# un-updatable dependecies
# Do not update past 0.28.4 due to change in input (VirtualKeyCode -> Key(KeyCode || char)), this breaks our input system
winit = "0.28.4"
# Do not update past 0.18.0 due to change requiring newer winit version, and lifetime in Surface, which is a breaking change, breaking most of our code
wgpu = { version = "0.18.0", features = ["spirv"] }

# to be replaced
# ideally remove, for more lightweight one, or custom math for the limited functionality we need.
glam = "0.25.0"

# 3d dependencies
gltf = { version = "1.4.0", optional = true }

# vr dependencies
openxr = { version = "0.17.1", optional = true }
parking_lot = "0.12.1"
